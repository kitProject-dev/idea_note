stages:
  - analyze
  - archive
  - deploy

.flutter_docker_image:
  image: kitproject/flutter:beta
  before_script:
    - flutter version 1.25.0-8.1.pre --force

.flutter_sdk:
  before_script:
    - flutter version 1.25.0-8.1.pre --force
  tags:
    - mac-mini

unit_test:
  extends: .flutter_docker_image
  stage: analyze
  script:
    - flutter test -v --coverage
    - lcov --list coverage/lcov.info
    - genhtml coverage/lcov.info --output=coverage
  except:
    - master
  artifacts:
    paths:
      - coverage

analyze:
  extends: .flutter_docker_image
  stage: analyze
  script:
    - flutter analyze -v
  except:
    - master

archive_android:
  extends: .flutter_docker_image
  stage: archive
  script:
    - flutter build apk --target="lib/main_mobile.dart" -v
  except:
    - master
  artifacts:
    expire_in: 1d
    paths:
      - build/app/outputs/apk/release/app-release.apk

archive_ios:
  extends: .flutter_sdk
  stage: archive
  script:
    - flutter build ios --target="lib/main_mobile.dart" -v
    - cd build/ios/iphoneos/
    - mkdir -p Payload
    - mv Runner.app Payload/
    - zip -ry Runner.ipa Payload
  except:
    - master
  artifacts:
    expire_in: 1d
    paths:
      - build/ios/iphoneos/Runner.ipa

archive_web_develop:
  extends: .flutter_docker_image
  stage: archive
  script:
    - flutter build web --target="lib/main_web.dart" -v
  only:
    - develop
  artifacts:
    expire_in: 1d
    paths:
      - build/web

deploy_mobile:
  extends: .flutter_docker_image
  stage: deploy
  script:
    - mkdir .public
    - cp -r html/index.html .public
    - cp -r html/app.plist .public
    - cp -r build/app/outputs/apk/release/app-release.apk .public
    - cp -r build/ios/iphoneos/Runner.ipa .public
    - mv .public public
  dependencies:
    - archive_android
    - archive_ios
  artifacts:
    paths:
      - public
  only:
    - develop

deploy_web_develop:
  extends: .flutter_sdk
  stage: deploy
  script:
    - firebase deploy -P develop -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --token ${FIREBASE_TOKEN} --only hosting
  dependencies:
    - archive_web_develop
  only:
    - develop

archive_android_production:
  extends: .flutter_docker_image
  stage: archive
  script:
    - flutter build apk --target="lib/main_mobile.dart" -v
  only:
    - master
  artifacts:
    paths:
      - build/app/outputs/apk/release/app-release.apk

archive_ios_production:
  extends: .flutter_sdk
  stage: archive
  script:
    - flutter build ios --target="lib/main_mobile.dart" -v
    - cd build/ios/iphoneos/
    - mkdir -p Payload
    - mv Runner.app Payload/
    - zip -ry Runner.ipa Payload
  only:
    - master
  artifacts:
    paths:
      - build/ios/iphoneos/Runner.ipa

archive_web_production:
  extends: .flutter_docker_image
  stage: archive
  script:
    - flutter build web --target="lib/main_web.dart" -v
  only:
    - master
  artifacts:
    paths:
      - build/web

deploy_web_production:
  extends: .flutter_sdk
  stage: deploy
  script:
    - firebase deploy -P production -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --token ${FIREBASE_TOKEN} --only hosting
  dependencies:
    - archive_web_production
  only:
    - master
